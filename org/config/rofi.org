#+title: Rofi Configuration
#+SETUPFILE: ../styles/read-the-org.org
#+OPTIONS: auto-id:t
#+HTML_HEAD_EXTRA: <meta name="description" content="ebeem’s Rofi Configuration" />
#+HTML_HEAD_EXTRA: <meta property="og:title" content="ebeem’s Rofi Configuration" />
#+HTML_HEAD_EXTRA: <meta property="og:description" content="Description of the rofi configuration of ebeem" />
#+PROPERTY: header-args:conf :exports code :mkdirp yes :tangle ~/.config/rofi/config.rasi

* Introduction
~Rofi~ started as a clone of ~simpleswitcher~, written by Sean Pringle - a popup window switcher roughly based on ~superswitcher~. ~Simpleswitcher~ laid the foundations, and therefore Sean Pringle deserves most of the credit for this tool. ~Rofi~ (renamed, as it lost the simple property) has been extended with extra features, like an application launcher and ssh-launcher, and can act as a drop-in dmenu replacement, making it a very versatile tool.

~Rofi~, like ~dmenu~, will provide the user with a textual list of options where one or more can be selected. This can either be running an application, selecting a window, or options provided by an external script.
https://github.com/davatorium/rofi

* Display Configuration
#+BEGIN_SRC conf
configuration {
  dpi:                        100;
  monitor:                    1;
  modi:                       "drun,run,filebrowser,window";
  show-icons:                 true;
  display-drun:               "";
  display-run:                "";
  display-filebrowser:        "";
  display-window:             "";
  drun-display-format:        "{name} [<span weight='light' size='small'><i>({generic})</i></span>]";
  window-format:              "{w} · {c} · {t}";
  case-sensitive:             false;
}
#+END_SRC

* Keybindings Configuration
My ~rofi~ configuration uses ~VI~ keybindings

#+BEGIN_SRC conf
configuration {
  kb-mode-complete:     "";
  kb-row-up:            "Up,Control+k,Shift+Tab,Shift+ISO_Left_Tab";
  kb-row-down:          "Down,Control+j";
  kb-accept-entry:      "Control+m,Return,KP_Enter";
  kb-remove-to-eol:     "Control+Shift+e";
  kb-mode-previous:     "Shift+Left,Control+Shift+Tab,Control+h";
  kb-mode-next:         "Shift+Right,Control+Tab,Control+l";
  kb-remove-char-back:  "BackSpace";
}
#+END_SRC

* Look and Feel
All colors and other configuration related to the look and feel that can be retrieved from ~Xresources~ should be placed here. This section will help us automate loading themes from ~Xresources~ which was deprecated since version ~1.7.0~

We provide a template that will be passed to an elisp to be processed

#+name: colors-configs
#+BEGIN_SRC conf :tangle no
configuration {
    icon-theme:       \"${xrdb:icon-theme}\";
    font:             \"${xrdb:rofi.font}\";
    terminal:         \"${xrdb:rofi.terminal}\";
}

 * {
    background:       ${xrdb:rofi.background};
    background-alt:   ${xrdb:rofi.background-alt};
    foreground:       ${xrdb:rofi.foreground};
    selected:         ${xrdb:rofi.primary};
    active:           ${xrdb:rofi.primary};
    urgent:           ${xrdb:rofi.red};
    border-color:     ${xrdb:rofi.border-color};
    border-width:     ${xrdb:rofi.border-width}px solid;
    border-radius:    ${xrdb:rofi.border-radius}px;

    handle-color:                var(selected);
    background-color:            var(background);
    foreground-color:            var(foreground);
    alternate-background:        var(background-alt);
    normal-background:           var(background);
    normal-foreground:           var(foreground);
    urgent-background:           var(urgent);
    urgent-foreground:           var(background);
    active-background:           var(active);
    active-foreground:           var(background);
    selected-normal-background:  var(selected);
    selected-normal-foreground:  var(background);
    selected-urgent-background:  var(active);
    selected-urgent-foreground:  var(background);
    selected-active-background:  var(urgent);
    selected-active-foreground:  var(background);
    alternate-normal-background: var(background);
    alternate-normal-foreground: var(foreground);
    alternate-urgent-background: var(urgent);
    alternate-urgent-foreground: var(background);
    alternate-active-background: var(active);
    alternate-active-foreground: var(background);
    background-color:            var(background-color);
}
#+END_SRC

#+name: xrdb-preprocessor
#+BEGIN_SRC emacs-lisp :tangle no :exports none :cache yes :noweb yes :mkdirp yes
(xresources-preprocessor "rofi" "
<<colors-configs>>
")
#+END_SRC


#+BEGIN_SRC conf :noweb tangle :exports none
<<xrdb-preprocessor()>>
#+END_SRC

* Main Window
#+BEGIN_SRC conf
window {
    transparency:                "real";
    location:                    northwest;
    anchor:                      northwest;
    fullscreen:                  false;
    width:                       350px;
    x-offset:                    10px;
    y-offset:                    40px;

    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    border:                      var(border-width);
    border-radius:               var(border-radius);
    cursor:                      "default";
}
#+END_SRC

* Main box
#+BEGIN_SRC conf
mainbox {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     40px;
    border:                      var(border-width);
    border-radius:               var(border-radius);
    border-color:                var(border-color);
    background-color:            transparent;
    children:                    [ "inputbar", "message", "listview", "mode-switcher" ];
}
#+END_SRC

* Prompt
#+BEGIN_SRC conf
inputbar {
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     0px;
    background-color:            transparent;
    text-color:                  var(foreground-color);
    children:                    [ "prompt", "entry" ];
}

prompt {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
    text-color:                  var(selected);
}

textbox-prompt-colon {
    enabled:                     true;
    expand:                      false;
    str:                         "::";
    background-color:            inherit;
    text-color:                  inherit;
}

entry {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
    cursor:                      text;
    placeholder:                 "search...";
    placeholder-color:           inherit;
}
#+END_SRC

* Rows Filter
#+BEGIN_SRC conf
num-filtered-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}

textbox-num-sep {
    enabled:                     true;
    expand:                      false;
    str:                         "/";
    background-color:            inherit;
    text-color:                  inherit;
}

num-rows {
    enabled:                     true;
    expand:                      false;
    background-color:            inherit;
    text-color:                  inherit;
}

case-indicator {
    enabled:                     true;
    background-color:            inherit;
    text-color:                  inherit;
}
#+END_SRC

* Listview
#+BEGIN_SRC conf
listview {
    enabled:                     true;
    columns:                     1;
    lines:                       12;
    cycle:                       true;
    dynamic:                     true;
    scrollbar:                   true;
    layout:                      vertical;
    reverse:                     false;
    fixed-height:                true;
    fixed-columns:               true;
    spacing:                     5px;
    margin:                      0px;
    padding:                     0px;
    background-color:            transparent;
    text-color:                  var(foreground-color);
    cursor:                      "default";
    border:                      0;
}
scrollbar {
    handle-width:                var(border-width);
    handle-color:                var(handle-color);
    background-color:            var(alternate-background);
}
#+END_SRC

* Elements
#+BEGIN_SRC conf
element {
    enabled:                     true;
    spacing:                     8px;
    margin:                      0px;
    padding:                     8px;
    background-color:            transparent;
    text-color:                  var(foreground-color);
    cursor:                      pointer;
}
element normal.normal {
    background-color:            var(normal-background);
    text-color:                  var(normal-foreground);
}
element normal.urgent {
    background-color:            var(urgent-background);
    text-color:                  var(urgent-foreground);
}
element normal.active {
    background-color:            var(active-background);
    text-color:                  var(active-foreground);
}
element selected.normal {
    background-color:            var(selected-normal-background);
    text-color:                  var(normal-background);
}
element selected.urgent {
    background-color:            var(selected-urgent-background);
    text-color:                  var(selected-urgent-foreground);
}
element selected.active {
    background-color:            var(selected-active-background);
    text-color:                  var(selected-active-foreground);
}
element alternate.normal {
    background-color:            var(alternate-normal-background);
    text-color:                  var(alternate-normal-foreground);
}
element alternate.urgent {
    background-color:            var(alternate-urgent-background);
    text-color:                  var(alternate-urgent-foreground);
}
element alternate.active {
    background-color:            var(alternate-active-background);
    text-color:                  var(alternate-active-foreground);
}
element-icon {
    background-color:            transparent;
    text-color:                  inherit;
    size:                        24px;
    cursor:                      inherit;
}
element-text {
    background-color:            transparent;
    text-color:                  inherit;
    highlight:                   inherit;
    cursor:                      inherit;
    vertical-align:              0.5;
    horizontal-align:            0.0;
}
#+END_SRC

* Mode Switcher
#+BEGIN_SRC conf
mode-switcher{
    enabled:                     true;
    spacing:                     10px;
    margin:                      0px;
    padding:                     0px;
    background-color:            transparent;
    text-color:                  var(foreground-color);
}
button {
    padding:                     8px;
    background-color:            var(alternate-background);
    text-color:                  inherit;
    cursor:                      pointer;
}
button selected {
    background-color:            var(selected-normal-background);
    text-color:                  var(selected-normal-foreground);
}
#+END_SRC

* Message
#+BEGIN_SRC conf
message {
    enabled:                     true;
    margin:                      0px;
    padding:                     0px;
    border:                      var(border-width);
    border-radius:               var(border-radius);
    border-color:                var(border-color);
    background-color:            transparent;
    text-color:                  var(foreground-color);
}

textbox {
    padding:                     8px;
    border:                      var(border-width);
    border-radius:               var(border-radius);
    border-color:                var(border-color);
    background-color:            var(alternate-background);
    text-color:                  var(foreground-color);
    vertical-align:              0.5;
    horizontal-align:            0.0;
    highlight:                   none;
    placeholder-color:           var(foreground-color);
    blink:                       true;
    markup:                      true;
}

error-message {
    padding:                     10px;
    border:                      var(border-width);
    border-radius:               var(border-radius);
    border-color:                var(border-color);
    text-color:                  var(foreground-color);
}
#+END_SRC

* Right Menu Config

This configuration is used for ~sound output~ and ~power menu~. In general, it should be used for any rofi menu that should be placed on the right side of the screen.

#+BEGIN_SRC conf :tangle ~/.config/rofi/config-right-menu.rasi
@import                          "config.rasi"

window {
    location:                    northeast;
    anchor:                      northeast;
    x-offset:                    -10px;
}
#+END_SRC
